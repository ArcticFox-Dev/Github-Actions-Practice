# This is a basic workflow to help you get started with Actions

name: Build Libraries

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deployLibOne:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: 'true'
          source-url: https://nuget.pkg.github.com/randhall/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build LibOne
        run: dotnet build --configuration Release ./LibOne/LibOne/LibOne.csproj
      - name: Test LibOne
        run: dotnet test ./LibOne/LibOne.Tests/LibOne.Tests.csproj
      - name: Publish to GPR
        run: dotnet nuget push ./LibOne/LibOne/bin/Release/*.nupkg
        
  deployLibTwo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: 'true'
          source-url: https://nuget.pkg.github.com/randhall/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build LibTwo
        run: dotnet build --configuration Release ./LibTwo/LibTwo/LibTwo.csproj
      - name: Test LibTwo
        run: dotnet test ./LibTwo/LibTwo.Tests/LibTwo.Tests.csproj
      - name: Publish to GPR
        run: dotnet nuget push ./LibTwo/LibTwo/bin/Release/*.nupkg
